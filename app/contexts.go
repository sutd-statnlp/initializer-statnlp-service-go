// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "intital": Application Contexts
//
// Command:
// $ goagen
// --design=statnlp-initializer-service-go/design
// --out=$(GOPATH)/src/statnlp-initializer-service-go
// --version=v1.3.1

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// ListMessageContext provides the message list action context.
type ListMessageContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
}

// NewListMessageContext parses the incoming request URL and body, performs validations and creates the
// context used by the message controller list action.
func NewListMessageContext(ctx context.Context, r *http.Request, service *goa.Service) (*ListMessageContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ListMessageContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *ListMessageContext) OK(r MessageCollection) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/json; type=collection")
	}
	if r == nil {
		r = MessageCollection{}
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}

// NotFound sends a HTTP response with status code 404.
func (ctx *ListMessageContext) NotFound() error {
	ctx.ResponseData.WriteHeader(404)
	return nil
}
